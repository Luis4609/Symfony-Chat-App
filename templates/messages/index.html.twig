{% extends 'navbar.html.twig' %}

{% block title %}
	Messages
{% endblock %}


{% block body %}

	<header>
		<nav class="navbar navbar-expand-lg navbar-dark fixed-top bg-dark">
			<div class="container-fluid d-grid row" style="grid-template-columns: 1fr 1fr 1fr">
				<a class="navbar-brand" href="#">Messages-App</a>
				<div class="justify-content-center" id="navbarCollapse">
					<ul class="navbar-nav mr-auto">
						<li class="nav-item active">
							<a class="nav-link" href="{{ path('outbox_messages') }}">Outbox
							</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="{{ path('new_message') }}">New message</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="{{ path('new_message_participants') }}">New message for multiple</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="{{ path('users_friends') }}">Contacts
							</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="{{ path('users_profile', {'id': app.user.id}) }}">Profile
							</a>
						</li>
					</ul>
				</div>
				<div class="d-flex">
					<div class="flex-shrink-0 dropdown mx-auto">
						<a href="{{ path('app_logout') }}" class="btn btn-outline-light">
							Log Out
						</a>
					</div>
				</div>
			</div>
		</nav>
	</header>

	<div class="list-group">
		<h2>
			Inbox
			<i class="fas fa-inbox"></i>
		</h2>
		<div class="messages overflow-auto" id="messages">

			{% for message in messages %}
				<a	href="{{ path('info_message', {'id': message.id}) }}" class="list-group-item list-group-item-action d-flex gap-3 py-3 mb-1" aria-current="true">
					{# <img src="#" alt="Avatar de usuario" width="32" height="32" class="rounded-circle flex-shrink-0"/> #}
					<div class="d-flex gap-2 w-100 justify-content-between">
						<div>
							{% for user in users %}
								{% if user.id == message.fromuserid %}
									<h6 class="mb-0">
										{{ user.email }}</h6>
								{% endif %}
							{% endfor %}
							<p class="mb-0 opacity-75">
								{{ message.text|slice(0, 10) }}
							</p>
						</div>
						<small class="opacity-50 text-nowrap">
							{{ message.timestamp|date("H:i:s m/d/Y ") }}</small>
					</div>
					{% if message.isread == 0 %}
						<i class="far fa-check-square"></i>
					{% else %}
						<i class="fas fa-check-square"></i>
					{% endif %}
				</a>
			{% endfor %}

		</div>
		{# <button id="button">Reload messages</button> #}

		<input value="{{app.user.id}}" hidden id="loggedInUser">
		{# <input value="{{users}}" id="loggedInUserEmail">	 #}
		<input value="{{lastMessage.timestamp|date("H:i:s m/d/Y ") }}" hidden id="lastMessage">
		
		<div class="">
			<a href="{{ path('new_message') }}" class="btn btn-primary">New message</a>
		</div>
	</div>

	<script>
		const loggedInUser = document.getElementById('loggedInUser').value;
		{# const loggedInUserEmail = document.getElementById('loggedInUserEmail').value; #}
		const lastMessage = document.getElementById('lastMessage').value;

        function loadMessages() {
            var xhr = new XMLHttpRequest();
            xhr.open('GET', `http://127.0.0.1:8000/api/messages?ToUserId=${loggedInUser}&Timestamp[strictly_after]=${lastMessage}`, true);
            xhr.setRequestHeader('accept', 'application/json'); 
			console.log(`${loggedInUser}`)
			console.log(`${lastMessage}`)
			console.log(`${users}`)	

            xhr.onload = function () {
                if (this.status == 200) {
                    var messages = JSON.parse(this.responseText);
                    console.log(`${this.responseText}`)
                    console.log(`Get mensajes: ${messages}`)

					
                    var output = '';
                    for (var i in messages) {
						var output = document.createElement('a')
							
							 output.innerHTML = ` <a href="/messages/info_message/${ messages[i].Id}" class="list-group-item list-group-item-action d-flex gap-3 py-3 mb-1" aria-current="true">
											<div class="d-flex gap-2 w-100 justify-content-between">
												<div>
												<h6 class="mb-0">${messages[i].FromUserId}</h6>
												<p class="mb-0 opacity-75">${ messages[i].Text}</p>
												</div>
													<small class="opacity-50 text-nowrap">${ messages[i].Timestamp} </small>
											</div>
											<i class="fas fa-check-square"></i>
										</a>`
						var eElement =  document.getElementById('messages');
						eElement.prepend(output)

                    }


                    
                }
            }
            xhr.send();
        }
		//Add interval to loadMessages and execute with the load of the document
		{# const interval = setInterval(loadMessages, 30000);
		window.onload = interval; #}


    </script>
{% endblock %}
